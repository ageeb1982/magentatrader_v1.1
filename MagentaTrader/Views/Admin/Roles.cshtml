@{
    ViewBag.Title = "Roles";
}

<link href="/css/bootstrap.min.css" rel="stylesheet" />
<link href="/css/styles.css" rel="stylesheet" />
<link href="~/css/toastr.css" rel="stylesheet" />
<link href="/css/ytLoad.jquery.css" rel="stylesheet" type="text/css">

<script src="~/js/jquery.js"></script>
<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>

<script src="/js/date.js"></script>
<script src="/js/jquery.validate.js"></script>
<script src="~/js/toastr.js"></script>
<script src="~/js/jquery.slimscroll.min.js"></script>

<script src="/wijmo/controls/wijmo.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.input.js"></script>
<script src="/wijmo/controls/wijmo.grid.js" type="text/javascript"></script>
<script src="~/wijmo/controls/wijmo.grid.filter.js"></script>
<script src="/wijmo/controls/wijmo.chart.min.js"></script>

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />

<script src="/js/jquery.transit.js" type="text/javascript"></script>
<script src="/js/ytLoad.jquery.js" type="text/javascript"></script>

<div id="ajaxContent"></div>

@*Menu*@
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" dta-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="~/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"></span></a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li role="presentation"><a href="~/Admin/user">Users</a></li>
                <li role="presentation"><a href="~/Admin/Event">Event</a></li>
                <li role="presentation"><a href="~/Admin/Users">Users</a></li>
                <li role="presentation"><a href="~/Admin/Package">Packages</a></li>
                <li role="presentation"><a href="~/Admin/Product">Products</a></li>
                <li role="presentation"><a href="~/Admin/News">News</a></li>
                <li role="presentation" class="active"><a href="~/Admin/Roles">Roles</a></li>
                <li role="presentation"><a href="~/Admin/"><i class="fa fa-home"></i></a></li>
            </ul>
        </div>
    </div>
</nav>

@*List*@
<div id="DivUsers">
    <div class="container">

        <div class="row">
            <h2 class="section-heading">User</h2>
            <div class="col-lg-12">
                <h4>Users</h4>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-lg-4">
                <select id="Roles" class="full-width form-control" onchange="roles_OnChange()">
                    <option value="Chart">Chart</option>
                    <option value="Web99">Web99</option>
                    <option value="Admin">Admin</option>
                    <option value="Workshop">Workshop</option>
                    <option value="Broker">Broker</option>
                    <option value="Tester">Tester</option>
                    <option value="Quest">Quest</option>
                    <option value="SMS">SMS</option>
                </select>
            </div>
            <div class="col-lg-2">
                <button id="CmdDownloadUser" type="submit" class="btn btn-primary btn-block" onclick="cmdDownloadUser_OnClick()">Save Users</button>
            </div>
            <div class="col-lg-2">
                <button id="CmdDownloadUserToPral" type="submit" class="btn btn-primary btn-block" onclick="cmdDownloadUserToPral_OnClick()">Save Users To Prayl</button>
            </div>
        </div>
        <br />
        
        <div class="row">
            <div class="col-lg-12">
                <div id="UsersGrid" class="grid"></div>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="btn-group col-md-7" id="naviagtionPageUser">
                <button type="button" class="btn btn-default" id="btnMoveToFirstPageUser">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageUser">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageUser"></button>
                <button type="button" class="btn btn-default" id="btnMoveToNextPageUser">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToLastPageUser">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
        </div>

    </div>
</div>

@*Modal User*@
<div class="modal" id="ModalUserRole" role="dialog">
    <div class="modal-dialog" style="width: 1100px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 id="ModalUserRoleTitle" class="modal-title">User Roles</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">Username:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="UserId" disabled type="hidden" />
                                <input class="form-control" id="Username" disabled />
                            </div>
                        </div>
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">First Name:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="FirstName" disabled />
                            </div>
                        </div>
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">Last Name:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="LastName" disabled />
                            </div>
                        </div>
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">E-mail:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="Email" disabled />
                            </div>
                        </div>
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">Phone No:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="PhoneNumber" disabled />
                            </div>
                        </div>
                        <div class="info-div-ledger">
                            <div class="user-fieldLabel-ledger">Date:</div>
                            <div class="box-ledger">
                                <input class="form-control" id="DateCreated" disabled />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div id="UserRolesGrid" class="grid"></div>
                        <br />
                        <div class="controls form-inline">
                            <span><select id="NewRole" class="form-control"></select></span>
                            <span><button class='btn btn-primary' id='CmdAddRole' onclick='cmdAddRole_OnClick()'>Add Role</button></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@*Module*@
<script type="text/javascript">

    var RolesData = new Array();

    var UsersData;
    var UsersCollection;
    var UsersGrid;
    var UserRolesData;
    var UserRolesCollection;
    var UserRolesGrid;

    var btnFirstPageUser;
    var btnPreviousPageUser;
    var btnNextPageUser;
    var btnLastPageUser;
    var btnCurrentPageUser;

    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "3000",
        "extendedTimeOut": 0,
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut",
        "tapToDismiss": false
    }
    
    function roles_OnChange() {
        UsersData = getUsers();
        UsersCollection = new wijmo.collections.CollectionView(UsersData);
        makeUserGrid();
    }
    function cmdLedgerView_OnClick(id) {
        window.location.href = '/Admin/UserLedger?user=' + id;
    }
    function cmdDownloadUser_OnClick() {
        var CSV = '';
        var data = [];
        var role = document.getElementById('Roles').value;

        for (i = 0; i < UsersData.length; i++) {
            data.push({
                UserName: UsersData[i].UserName,
                FirstName: UsersData[i].FirstName,
                LastName: UsersData[i].LastName,
                EmailAddress: UsersData[i].EmailAddress,
                Address: UsersData[i].Address,
                PhoneNumber: UsersData[i].PhoneNumber
            });
        }

        // Row Label

        CSV += role + '\r\n\n';

        var DataLabelRow = '';
        for (var d in data[0]) {
            DataLabelRow += d + ',';
        }
        DataLabelRow = DataLabelRow.slice(0, -1);
        CSV += DataLabelRow + '\r\n';
        
        // Row

        for (var i = 0; i < data.length; i++) {
            var DataRow = '';
            for (var d in data[i]) {
                DataRow += '"' + data[i][d] + '",';
            }
            DataRow.slice(0, DataRow.length - 1);
            CSV += DataRow + '\r\n';
        }

        if (CSV == '') {
            alert("No data");
            return;
        }

        // Create filename

        var fileName = 'users_' + role + '.CSV';

        // Download via <a> link

        var link = document.createElement("a");

        if (link.download !== undefined) {
            var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
            var url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", fileName);
            link.style = "visibility:hidden";
        }

        if (navigator.msSaveBlob) {
            link.addEventListener("click", function (event) {
                var blob = new Blob([CSV], {
                    "type": "text/csv;charset=utf-8;"
                });
                navigator.msSaveBlob(blob, fileName);
            }, false);
        }

        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
    function cmdDeleteUserRole_OnClick() {
        var username = UsersCollection.currentItem.UserName;
        var role = document.getElementById('Roles').value;

        var roleId = "";
        for (i = 0; i < RolesData.length; i++) if (RolesData[i].Name == role) roleId = RolesData[i].Id;

        if (confirm("Delete " + username + " from the role of " + role + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteUserRole/" + username + '/' + roleId,
                contentType: "apllication/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success('Successfully Deleted!');
                        var rowIndex = UsersGrid.selection.row;
                        if (rowIndex > -1) {
                            var dataItem = UsersGrid.rows[rowIndex].dataItem;
                            if (dataItem) {
                                UsersGrid.collectionView.remove(dataItem);
                            }
                        }
                    },
                    404: function () {
                        toastr.error("Not found!");
                    },
                    400: function () {
                        toastr.error("Bad request");
                    }
                }
            });
        }
    }
    function cmdEditUserRole_OnClick() {
        $('#ModalUserRole').modal({
            show: true,
            backdrop: false
        });

        document.getElementById('UserId').value = UsersCollection.currentItem.Id;
        document.getElementById('Username').value = UsersCollection.currentItem.UserName;
        document.getElementById('FirstName').value = UsersCollection.currentItem.FirstName;
        document.getElementById('LastName').value = UsersCollection.currentItem.LastName;
        document.getElementById('Email').value = UsersCollection.currentItem.EmailAddress;
        document.getElementById('PhoneNumber').value = UsersCollection.currentItem.PhoneNumber;
        document.getElementById('DateCreated').value = UsersCollection.currentItem.DateCreated;

        makeUserRoleGrid();
    }
    function cmdDeleteRole_OnClick(roleId) {
        var username = UsersCollection.currentItem.UserName;

        var role = "";
        for (i = 0; i < RolesData.length; i++) if (RolesData[i].Id == roleId) role = RolesData[i].Name;

        if (confirm("Delete " + role + " role of " + username + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteUserRole/" + username + '/' + roleId,
                contentType: "apllication/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success('Successfully Deleted!');
                        makeUserRoleGrid();
                    },
                    404: function () {
                        toastr.error("Not found!");
                    },
                    400: function () {
                        toastr.error("Bad request");
                    }
                }
            });
        }
    }
    function getUsers() {
        var users = new wijmo.collections.ObservableArray();
        var role = document.getElementById('Roles').value;

        //$('#loading').modal('show');

        $.ajax({
            url: '/api/GetRoleUsers/' + role,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {

                //$('#loading').modal('hide');

                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        users.push({
                            LedgerId: "<button class='btn btn-success btn-xs' data-toggle='modal' id=" + Results[i]["UserName"] + " onclick='cmdLedgerView_OnClick(this.id)'>Ledger</button>",
                            EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditUserRole' onclick='cmdEditUserRole_OnClick()'>Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteUserRole' onclick='cmdDeleteUserRole_OnClick()'>Delete</button>",
                            UserNameLink: "<a href='/Admin/UserLedger?user=" + Results[i]["UserName"] + "'>" + Results[i]["UserName"] + "</a>",
                            Id: Results[i]["Id"],
                            UserName: Results[i]["UserName"],
                            FirstName: Results[i]["FirstName"],
                            LastName: Results[i]["LastName"],
                            EmailAddress: Results[i]["EmailAddress"],
                            Address: Results[i]["Address"],
                            PhoneNumber: Results[i]["PhoneNumber"],
                            ReferralUserName: Results[i]["ReferralUserName"],
                            DateCreated: Results[i]["DateCreated"]
                        });
                    }

                    toastr.success("Success.");

                } else {
                    toastr.error("No data.");
                }

            }
        }).fail(
            function (xhr, textStatus, err) {
                toastr.error("Server error.");
            }
        );

        return users;
    }
    function getUserRoles() {
        var username = UsersCollection.currentItem.UserName;
        var roles = new wijmo.collections.ObservableArray();
        var defaultRole = document.getElementById('Roles').value;

        $.ajax({
            url: '/api/GetUserRoles/' + username,
            contentType: 'application/json; charset=urf-8',
            type: 'GET',
            dataType: 'json',
            success: function (Results) {
                for (i = 0; i <= Results.length - 1; i++) {
                    if (Results[i]["Name"] == defaultRole) {
                        roles.push({
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteRole' onclick='cmdDeleteRole_OnClick(this.value)' value='" + Results[i]["Id"] + "' disabled>Delete</button>",
                            Role: Results[i]["Name"],
                            Id: Results[i]["Id"]
                        })
                    } else {
                        roles.push({
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteRole' onclick='cmdDeleteRole_OnClick(this.value)' value='" + Results[i]["Id"] + "'>Delete</button>",
                            Role: Results[i]["Name"],
                            Id: Results[i]["Id"]
                        })
                    }
                }
                toastr.success("Success.");

                $('#NewRole').empty()
                for (i = 0; i < RolesData.length; i++) {
                    var alreadyTaken = false;
                    for (r = 0; r < roles.length; r++) {
                        if(roles[r]["Id"]==RolesData[i]["Id"]) alreadyTaken = true;
                    }
                    if(alreadyTaken == false) $('#NewRole').append('<option value="' + RolesData[i]["Id"] + '">' + RolesData[i]["Name"] + '</option>');
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                toastr.error("Error getting user roles.");
            }
        );
        return roles;
    }

    function updateNavigateButtonsUser() {
        if (UsersCollection.pageSize <= 0) {
            document.getElementById('naviagtionPageUser').style.display = 'none';
            return;
        }
        document.getElementById('naviagtionPageUser').style.display = 'block';
        if (UsersCollection.pageIndex === 0) {
            btnFirstPageUser.setAttribute('disabled', 'disabled');
            btnPreviousPageUser.setAttribute('disabled', 'disabled');
            btnNextPageUser.removeAttribute('disabled');
            btnLastPageUser.removeAttribute('disabled');
        }
        else if (UsersCollection.pageIndex === (UsersCollection.pageCount - 1)) {
            btnFirstPageUser.removeAttribute('disabled');
            btnPreviousPageUser.removeAttribute('disabled');
            btnLastPageUser.setAttribute('disabled', 'disabled');
            btnNextPageUser.setAttribute('disabled', 'disabled');
        }
        else {
            btnFirstPageUser.removeAttribute('disabled');
            btnPreviousPageUser.removeAttribute('disabled');
            btnNextPageUser.removeAttribute('disabled');
            btnLastPageUser.removeAttribute('disabled');
        }
        btnCurrentPageUser.innerHTML = (UsersCollection.pageIndex + 1) + ' / ' + UsersCollection.pageCount;
    }
    function makeUserGrid() {
        UsersGrid.dispose();
        UsersGrid = new wijmo.grid.FlexGrid('#UsersGrid');
        UsersGrid.initialize({
            columns: [{
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 40,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "User Name",
                            "binding": "UserNameLink",
                            "allowSorting": true,
                            "isContentHtml": true,
                            "width": "*"
                        },
                        {
                            "header": "First Name",
                            "binding": "FirstName",
                            "allowSorting": true,
                            "width": "*"
                        },
                        {
                            "header": "Last Name",
                            "binding": "LastName",
                            "allowSorting": true,
                            "width": "*"
                        },
                        {
                            "header": "Email Address",
                            "binding": "EmailAddress",
                            "allowSorting": true,
                            "width": 250,
                        },
                        {
                            "header": "Phone Number",
                            "binding": "PhoneNumber",
                            "allowSorting": true,
                            "width": "*"
                        },
                        {
                            "header": "Referred By",
                            "binding": "ReferralUserName",
                            "allowSorting": true,
                            "width": "*"
                        },
                        {
                            "header": "Date Created",
                            "binding": "DateCreated",
                            "allowSorting": true,
                            "width": "*"
                        }],
            autoGenerateColumns: false,
            itemsSource: UsersCollection,
            isReadOnly: true
        });

        UsersGrid.trackChanges = true;

        UsersCollection.pageSize = 15;

        UsersCollection.collectionChanged.addHandler(function (sender, args) {
            updateNavigateButtonsUser();
        });

        updateNavigateButtonsUser();
    }
    function makeUserRoleGrid() {
        UserRolesCollection = new wijmo.collections.CollectionView(getUserRoles());

        UserRolesGrid.dispose();
        UserRolesGrid = new wijmo.grid.FlexGrid('#UserRolesGrid');
        UserRolesGrid.initialize({
            columns: [
                {
                    "header": "Delete",
                    "binding": "DeleteId",
                    "width": 60,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Role",
                    "binding": "Role",
                    "width": "4*",
                    "allowSorting": false,
                    "isContentHtml": true
                }
            ],
            autoGenerateColumns: false,
            itemsSource: UserRolesCollection,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });
    }

    $(document).ready(function () {
        $.ytLoad();

        toastr.options.preventDuplicates = true;

        UsersData = getUsers();
        UsersCollection = new wijmo.collections.CollectionView(UsersData);

        btnFirstPageUser = document.getElementById('btnMoveToFirstPageUser');
        btnPreviousPageUser = document.getElementById('btnMoveToPreviousPageUser');
        btnNextPageUser = document.getElementById('btnMoveToNextPageUser');
        btnLastPageUser = document.getElementById('btnMoveToLastPageUser');
        btnCurrentPageUser = document.getElementById('btnCurrentPageUser');

        UsersGrid = new wijmo.grid.FlexGrid('#UsersGrid');
        updateNavigateButtonsUser();

        btnFirstPageUser.addEventListener('click', function () {
            UsersCollection.moveToFirstPage();
            updateNavigateButtonsUser();
        });
        btnPreviousPageUser.addEventListener('click', function () {
            UsersCollection.moveToPreviousPage();
            updateNavigateButtonsUser();
        });
        btnNextPageUser.addEventListener('click', function () {
            UsersCollection.moveToNextPage();
            updateNavigateButtonsUser();
        });
        btnLastPageUser.addEventListener('click', function () {
            UsersCollection.moveToLastPage();
            updateNavigateButtonsUser();
        });

        makeUserGrid();

        UserRolesGrid = new wijmo.grid.FlexGrid('#UserRolesGrid');

        var roleSelect = document.getElementById("Roles");
        $.ajax({
            url: '/api/GetRoles',
            type: 'GET',
            contentType: 'application/json; charset-utf-8',
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        RolesData.push({
                            Id: Results[i]["Id"],
                            Name: Results[i]["Name"]
                        });
                    }
                    $('#Roles').empty()
                    for (i = 0; i < RolesData.length; i++) {
                        $('#Roles').append('<option value="' + RolesData[i]["Name"] + '">' + RolesData[i]["Name"] + '</option>');
                    }
                }
            }
        });

    });
</script>

