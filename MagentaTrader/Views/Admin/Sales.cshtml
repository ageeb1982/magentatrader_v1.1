@{
    ViewBag.Title = "Sales";
}

<link href="/css/bootstrap.min.css" rel="stylesheet" />
<link href="/css/styles.css" rel="stylesheet" />
<link href="~/css/toastr.css" rel="stylesheet" />

<script src="~/js/jquery.js"></script>
<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>

<script src="/js/date.js"></script>
<script src="/js/jquery.validate.js"></script>
<script src="~/js/toastr.js"></script>
<script src="~/js/jquery.slimscroll.min.js"></script>

<script src="/wijmo/controls/wijmo.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.input.js"></script>
<script src="/wijmo/controls/wijmo.grid.js" type="text/javascript"></script>
<script src="~/wijmo/controls/wijmo.grid.filter.js"></script>
<script src="/wijmo/controls/wijmo.chart.min.js"></script>

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />

@*Menu*@
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" dta-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="~/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"></span></a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li role="presentation"><a href="~/Admin/user">Users</a></li>
                <li role="presentation"><a href="~/Admin/Event">Event</a></li>
                <li role="presentation" class="active"><a href="~/Admin/Sales">Sales</a></li>
                <li role="presentation"><a href="~/Admin/Package">Packages</a></li>
                <li role="presentation"><a href="~/Admin/Product">Products</a></li>
                <li role="presentation"><a href="~/Admin/News">News</a></li>
                <li role="presentation"><a href="~/Admin/"><i class="fa fa-home"></i></a></li>
            </ul>
        </div>
    </div>
</nav>

@*List*@
<div id="DivSales">
    <div class="container">

        <div class="row">
            <h2 class="section-heading">Sale</h2>
            <div class="col-lg-12">
                <h4>Sales</h4>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-5">
                <div id="StartDateFilter" class="col-lg-6">
                    <input id="SalesDateStartFilter" readonly />
                </div>
                <div id="EndDateFilter" class="col-lg-6">
                    <input id="SalesDateEndFilter" readonly />
                </div>
            </div>
            <div class="col-lg-2">
                <select id="GroupList_Data" class="full-width form-control">
                    <option value="n">All</option>
                    <option value="ONE-TIME">One-time</option>
                    <option value="REOCCURRING">Recurring</option>
                </select>
            </div>
            <div class="col-lg-2">
                <select id="StatusList_Data" class="full-width form-control">
                    <option value="n">All</option>
                    <option value="OK">OK</option>
                    <option value="OK-First">OK-First</option>
                    <option value="DECLINED">Declined</option>
                    <option value="REFUND">Refund</option>
                    <option value="ERROR">Error</option>
                </select>
            </div>
            <div class="col-lg-3">
                <button id="CmdAddSale" type="submit" class="btn btn-primary pull-right" onclick="CmdSaleAdd_OnClick()" style="margin-left: 8px;">Add</button>
                <button class="btn btn-primary pull-right" id="SaveSaleLedger" style="margin-left: 8px;">
                    Export
                </button>
                <button class="btn btn-primary pull-right" id="SearchFilter">Search</button>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-12">
                <div id="SalesGrid" class="grid"></div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="btn-group col-md-7" id="naviagtionPageSale">
                <button type="button" class="btn btn-default" id="btnMoveToFirstPageSale">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageSale">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageSale"></button>
                <button type="button" class="btn btn-default" id="btnMoveToNextPageSale">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToLastPageSale">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
            <div class="col-md-5">
                <div class="row">
                    <div class="col-md-12">
                        <div class="pull-right"><span id="TotalAmount"></span></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="pull-right"><span id="TotalFirstSalesAmount"></span></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="pull-right"><span id="TotalSalesAmount"></span></div>
            </div>
        </div>

    </div>
</div>

@*Edit Detail*@
<div class="modal fade" id="SaleEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" @*data-dismiss="modal"*@ aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Sale Edit</h4>
            </div>
            <div class="modal-body scroll">
                <form id="saleForm">
                    <dl class="dl-horizontal">
                        <dt>Product Package</dt>
                        <dd>
                            <input class="form-control" id="SaleEdit_Id" type="hidden" />
                            <div id="cboSaleEdit_ProductPackageId" class="full-width"></div>
                            <input class="form-control" id="SaleEdit_ProductPackageId" type="hidden" readonly="true" />
                        </dd>
                        <dt>Username</dt>
                        <dd>
                            <div id="cboSaleEdit_UserId"></div>
                            <input class="form-control" id="SaleEdit_UserId" type="hidden" readonly="true" required />
                        </dd>
                        <dt>Sales Number</dt>
                        <dd>
                            <input class="form-control custom-width" id="SaleEdit_SalesNumber" name="SaleEdit_SalesNumber" type="number" min="0" required />
                        </dd>
                        <dt>Sales Date</dt>
                        <dd>
                            <div id="SaleEdit_SaleDate"></div>
                            <input class="form-control" id="SaleEdit_SaleDate_Data" type="hidden" />
                        </dd>
                        <dt>Renewal Date</dt>
                        <dd>
                            <div id="SaleEdit_RenewalDate"></div>
                            <input class="form-control" id="SaleEdit_RenewalDate_Data" type="hidden" />
                        </dd>
                        <dt>Expiry Date</dt>
                        <dd>
                            <div id="SaleEdit_ExpiryDate"></div>
                            <input class="form-control" id="SaleEdit_ExpiryDate_Data" type="hidden" />
                        </dd>
                        <dt>Particulars</dt>
                        <dd>
                            <input class="form-control" id="SaleEdit_Particulars" type="text" />
                        </dd>
                        <dt>Quantity</dt>
                        <dd>
                            <input class="form-control custom-width" id="SaleEdit_Quantity" name="SaleEdit_Quantity" type="number" min="0" required />
                        </dd>
                        <dt>Price</dt>
                        <dd>
                            <input class="form-control custom-width" id="SaleEdit_Price" name="SaleEdit_Price" type="number" min="0" required />
                        </dd>
                        <dt>Amount</dt>
                        <dd>
                            <input class="form-control custom-width" id="SaleEdit_Amount" type="text" disabled />
                        </dd>
                        <dt>Active</dt>
                        <dd>
                            <input class="form-control" id="SaleEdit_IsActive" type="checkbox" />
                        </dd>
                        <dt>Refunded</dt>
                        <dd>
                            <input class="form-control" id="SaleEdit_IsRefunded" type="checkbox" />
                        </dd>
                        <dt>Staus</dt>
                        <dd>
                            <select id="StatusList_Edit" class="full-width form-control">
                                <option value="OK">Ok</option>
                                <option value="OK-First">Ok-First</option>
                                <option value="DECLINED">Declined</option>
                                <option value="REFUND">Refund</option>
                                <option value="ERROR">Error</option>
                            </select>
                        </dd>
                    </dl>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @*data-dismiss="modal"*@ id="CmdSaleEditOk" @*@*onclick="CmdSaleEditOk_OnClick()"*@>
                    Ok
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="CmdSaleEditCancel">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@*Loading*@
<div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true">
    <div class="modal-dialog" style="width: 220px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <img src="/img/progress_bar.gif" />
            </div>
        </div>
    </div>
</div>


@*Module*@
<script type="text/javascript">

    var Sales;

    var SalesGrid;

    var SaleDate;
    var SaleRenewalDate;
    var SaleExpiryDate;

    var ax;
    var ac;

    var btnFirstPageSale;
    var btnPreviousPageSale;
    var btnNextPageSale;
    var btnLastPageSale;
    var btnCurrentPageSale;

    var UserList;
    var ProductPackageList;

    var SalesLedgerSaveData = [];

    function CmdSaleEdit_OnClick() {
        Sales.editItem(Sales.currentItem);

        $('#SaleEdit').modal({
            show: true,
            backdrop: false
        });

        var Sale = Sales.currentEditItem;
        var Status = document.getElementById('StatusList_Edit').options[document.getElementById('StatusList_Edit').selectedIndex].value;
        console.log(Status);
        document.getElementById('SaleEdit_Id').value = Sale.Id !== null && typeof (Sale.Id) != 'undefined' ? wijmo.Globalize.format(Sale.Id) : '';
        document.getElementById('SaleEdit_ProductPackageId').value = Sale.ProductPackageId ? Sale.ProductPackageId : '';
        document.getElementById('SaleEdit_UserId').value = Sale.UserId ? Sale.UserId : '';
        document.getElementById('SaleEdit_SalesNumber').value = Sale.SalesNumber ? Sale.SalesNumber : '';
        document.getElementById('SaleEdit_SaleDate').value = Sale.SalesDate ? Sale.SalesDate : '';
        document.getElementById('SaleEdit_SaleDate_Data').value = Sale.SalesDate ? Sale.SalesDate : '';
        document.getElementById('SaleEdit_RenewalDate').value = Sale.RenewalDate ? Sale.RenewalDate : '';
        document.getElementById('SaleEdit_RenewalDate_Data').value = Sale.RenewalDate ? Sale.RenewalDate : '';
        document.getElementById('SaleEdit_ExpiryDate').value = Sale.ExpiryDate ? Sale.ExpiryDate : '';
        document.getElementById('SaleEdit_ExpiryDate_Data').value = Sale.ExpiryDate ? Sale.ExpiryDate : '';
        document.getElementById('SaleEdit_Particulars').value = Sale.Particulars ? Sale.Particulars : '';
        document.getElementById('SaleEdit_Quantity').value = Sale.Quantity ? Sale.Quantity : '';
        document.getElementById('SaleEdit_Price').value = Sale.Price ? Sale.Price : '';
        document.getElementById('SaleEdit_Amount').value = Sale.Amount ? Sale.Amount : '';
        document.getElementById('SaleEdit_IsActive').checked = Sale.IsActive;
        document.getElementById('SaleEdit_IsRefunded').checked = Sale.IsRefunded;
        document.getElementById('StatusList_Edit').value = Status ? Status : '';

        SaleDate.dispose();
        SaleDate = new wijmo.input.InputDate('#SaleEdit_SaleDate', {
            format: 'M/d/yyyy',
            value: new Date(Sale.SalesDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_SaleDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });
        RenewalDate.dispose();
        RenewalDate = new wijmo.input.InputDate('#SaleEdit_RenewalDate', {
            format: 'M/d/yyyy',
            value: new Date(Sale.RenewalDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_RenewalDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });

        ExpiryDate.dispose();
        ExpiryDate = new wijmo.input.InputDate('#SaleEdit_ExpiryDate', {
            format: 'M/d/yyyy',
            value: new Date(Sale.ExpiryDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_ExpiryDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });

        ac.dispose();
        ac = new wijmo.input.AutoComplete('#cboSaleEdit_UserId', {
            itemsSource: getUsersList(UserList.items),
            selectedValue: Sale.User,
            onSelectedIndexChanged: function () {
                $("#SaleEdit_UserId").val(UserList.items[this.selectedIndex].Id);
            }
        });
        ax.dispose();
        ax = new wijmo.input.AutoComplete('#cboSaleEdit_ProductPackageId', {
            itemsSource: getProductPackageList(ProductPackageList.items),
            selectedValue: Sale.ProductPackage,
            onSelectedIndexChanged: function () {
                $("#SaleEdit_ProductPackageId").val(ProductPackageList.items[this.selectedIndex].Id);
            }
        });
    }
    function CmdSaleAdd_OnClick() {

        $('#SaleEdit').modal({
            show: true,
            backdrop: false
        });

        var CurrentDate = new Date();

        document.getElementById('SaleEdit_Id').value = 0;
        document.getElementById('SaleEdit_ProductPackageId').value = ProductPackageList.items[0].Id;
        document.getElementById('SaleEdit_UserId').value = UserList.items[0].Id;
        document.getElementById('SaleEdit_SalesNumber').value = '';
        document.getElementById('SaleEdit_SaleDate').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('SaleEdit_SaleDate_Data').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('SaleEdit_RenewalDate').value = CurrentDate.toString("M/d/yyyy");;
        document.getElementById('SaleEdit_RenewalDate_Data').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('SaleEdit_ExpiryDate').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('SaleEdit_ExpiryDate_Data').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('SaleEdit_Particulars').value = '';
        document.getElementById('SaleEdit_Quantity').value = 1;
        document.getElementById('SaleEdit_Price').value = 0;
        document.getElementById('SaleEdit_Amount').value = '';
        document.getElementById('StatusList_Edit').addEventListener('keyup', function () {
            var Status = document.getElementById('StatusList_Edit').options[document.getElementById('StatusList_Edit').selectedIndex].value
            document.getElementById('StatusList_Edit').value = Status;
            console.log(document.getElementById('StatusList_Edit').value);
        });
        document.getElementById('SaleEdit_Quantity').addEventListener('keyup', function () {
            document.getElementById('SaleEdit_Amount').value = document.getElementById('SaleEdit_Quantity').value * document.getElementById('SaleEdit_Price').value;
        });
        document.getElementById('SaleEdit_Price').addEventListener('keyup', function () {
            document.getElementById('SaleEdit_Amount').value = document.getElementById('SaleEdit_Quantity').value * document.getElementById('SaleEdit_Price').value;
        });
        document.getElementById('SaleEdit_IsActive').checked = false;
        document.getElementById('SaleEdit_IsRefunded').checked = false;

        SaleDate.dispose();
        SaleDate = new wijmo.input.InputDate('#SaleEdit_SaleDate', {
            format: 'M/d/yyyy',
            value: new Date(Sales.SaleDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_SaleDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });

        RenewalDate.dispose();
        RenewalDate = new wijmo.input.InputDate('#SaleEdit_RenewalDate', {
            format: 'M/d/yyyy',
            value: new Date(Sales.RenewalDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_RenewalDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });

        ExpiryDate.dispose();
        ExpiryDate = new wijmo.input.InputDate('#SaleEdit_ExpiryDate', {
            format: 'M/d/yyyy',
            value: new Date(Sales.ExpiryDate),
            onValueChanged: function () {
                document.getElementById('SaleEdit_ExpiryDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });

        ac.dispose();
        ac = new wijmo.input.AutoComplete('#cboSaleEdit_UserId', {
            itemsSource: getUsersList(UserList.items),
            placeholder: 'Select User ',
            onSelectedIndexChanged: function () {

                $("#SaleEdit_UserId").val(UserList.items[this.selectedIndex].Id);
            }
        });

        ax.dispose();
        ax = new wijmo.input.AutoComplete('#cboSaleEdit_ProductPackageId', {
            itemsSource: getProductPackageList(ProductPackageList.items),
            placeholder: 'Select Product Package',
            onSelectedIndexChanged: function () {

                $("#SaleEdit_ProductPackageId").val(ProductPackageList.items[this.selectedIndex].Id);
            }
        });
    }
    function CmdSaleDelete_OnClick() {
        Sales.editItem(Sales.currentItem);

        var Id = Sales.currentEditItem.Id;
        var SalesNumber = Sales.currentEditItem.SalesNumber;

        if (confirm("Delete Sales Number: " + SalesNumber + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteSales/" + Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success('Successfully Deleted!');
                        window.setTimeout(function () { location.reload() }, 3000);
                    },
                    404: function () {
                        toastr.error("Not found!");
                    },
                    400: function () {
                        toastr.error("Bad request");
                    }
                }
            });
        }
    }
    function CmdSaleEditOkFunction() {
        //if (confirm("Save Sales?") == true) { // ==> change to toastr confirmation message.

        var Sale = new Object();

        Sale.Id = document.getElementById('SaleEdit_Id').value;
        Sale.Id = Sale.Id.replace(",", "");
        Sale.ProductPackageId = document.getElementById('SaleEdit_ProductPackageId').value;
        Sale.UserId = document.getElementById('SaleEdit_UserId').value;
        Sale.SalesNumber = document.getElementById('SaleEdit_SalesNumber').value;
        Sale.SalesDate = document.getElementById('SaleEdit_SaleDate_Data').value;
        Sale.RenewalDate = document.getElementById('SaleEdit_RenewalDate_Data').value;
        Sale.ExpiryDate = document.getElementById('SaleEdit_ExpiryDate_Data').value;
        Sale.Particulars = document.getElementById('SaleEdit_Particulars').value;
        Sale.Quantity = document.getElementById('SaleEdit_Quantity').value;
        Sale.Price = document.getElementById('SaleEdit_Price').value;
        Sale.Amount = document.getElementById('SaleEdit_Amount').value;
        Sale.IsActive = document.getElementById('SaleEdit_IsActive').checked;
        Sale.IsRefunded = document.getElementById('SaleEdit_IsRefunded').checked;
        Sale.SalesStatus = document.getElementById('StatusList_Edit').value;


        var data = JSON.stringify(Sale)
        // Add New
        if (Sale.Id == 0) {
            $.ajax({
                type: "POST",
                url: "/api/AddSales",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                success: function (id) {
                    if (id > 0) {
                        toastr.success('Successfully Added!');
                        window.setTimeout(function () { location.reload() }, 3000);
                    } else {
                        toastr.error("Not added!");
                    }
                }
            }).s

            // Edit
        } else {
            $.ajax({
                type: "PUT",
                url: "/api/UpdateSales/" + Sale.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        toastr.success('Successfully Modified!');
                        window.setTimeout(function () { location.reload() }, 3000);
                    },
                    404: function () {
                        toastr.error("Not found!");
                    },
                    400: function () {
                        toastr.error("Bad Request!");
                    }
                }
            });
        }
    }
    //}
    function getFilteredSales(dateStart, dateEnd, packageGroup, status) {
        var sales = new wijmo.collections.ObservableArray();
        var totalAmount = 0;
        var totalSalesAmount = 0;
        var totalFirstSalesAmount = 0;
        $('#loading').modal('show');
        $.ajax({
            url: '/api/GetFilteredSales/' + dateStart + '/' + dateEnd + '/' + packageGroup + '/' + status,
            cache: false,
            type: 'GET',
            dataType: 'json',
            success: function (Results) {
                $('#loading').modal('hide');
                $('#loading').modal('hide');
                for (i = 0; i < Results.length; i++) {
                    totalAmount += Results[i]["Amount"];
                    totalSalesAmount += Results[i]["SalesAmount"];
                    totalFirstSalesAmount += Results[i]["SalesOKFirstAmount"];
                    sales.push({
                        EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditSale' onclick='CmdSaleEdit_OnClick()'>Edit</button>",
                        DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteSale' onclick='CmdSaleDelete_OnClick()'>Delete</button>",
                        Id: Results[i]["Id"],
                        UserId: Results[i]["UserId"],
                        User: Results[i]["User"],
                        FirstName: Results[i]["FirstName"],
                        LastName: Results[i]["LastName"],
                        FullName: Results[i]["FirstName"] + " " + Results[i]["LastName"],
                        SalesNumber: Results[i]["SalesNumber"],
                        SalesDate: Results[i]["SalesDate"],
                        RenewalDate: Results[i]["RenewalDate"],
                        ExpiryDate: Results[i]["ExpiryDate"],
                        Particulars: Results[i]["Particulars"],
                        Quantity: Results[i]["Quantity"],
                        Price: Results[i]["Price"],
                        Amount: Results[i]["Amount"],
                        IsActive: Results[i]["IsActive"],
                        IsRefunded: Results[i]["IsRefunded"],
                        SalesStatus: Results[i]["SalesStatus"],
                        SalesAmount: Results[i]["SalesAmount"],
                        Group: Results[i]["Group"],
                        ProductPackage: Results[i]["ProductPackage"]
                    })
                }
                Sales = new wijmo.collections.CollectionView(sales);
                Sales.pageSize = 15;
                MakeGrid();
                $('#TotalAmount').text('Total Amount : ' + (totalAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")));
                $('#TotalFirstSalesAmount').text('Total First Sales Amount : ' + (totalFirstSalesAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")));
                $('#TotalSalesAmount').text('Total Sales Amount : ' + totalSalesAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
            }
            }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
    }

    function GetSales() {
        var sales = new wijmo.collections.ObservableArray();
        var totalAmount = 0;
        var totalSalesAmount = 0;
        $('#loading').modal('show');
        $.ajax({
            url: '/api/Sales',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                $('#loading').modal('hide');
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        totalAmount = totalAmount + Results[i]["Price"];
                        totalSalesAmount = totalSalesAmount+ Results[i]["SalesAmount"];
                        sales.push({
                            EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditSale' onclick='CmdSaleEdit_OnClick()'>Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteSale' onclick='CmdSaleDelete_OnClick()'>Delete</button>",
                            Id: Results[i]["Id"],
                            ProductPackageId: Results[i]["ProductPackageId"],
                            ProductPackage: Results[i]["ProductPackage"],
                            UserId: Results[i]["UserId"],
                            User: Results[i]["User"],
                            FirstName: Results[i]["FirstName"],
                            LastName: Results[i]["LastName"],
                            FullName: Results[i]["FirstName"] + " " + Results[i]["LastName"],
                            SalesNumber: Results[i]["SalesNumber"],
                            SalesDate: Results[i]["SalesDate"],
                            RenewalDate: Results[i]["RenewalDate"],
                            ExpiryDate: Results[i]["ExpiryDate"],
                            Particulars: Results[i]["Particulars"],
                            Quantity: Results[i]["Quantity"],
                            Price: Results[i]["Price"],
                            Amount: Results[i]["Amount"],
                            IsActive: Results[i]["IsActive"],
                            IsRefunded: Results[i]["IsRefunded"],
                            SalesStatus: Results[i]["SalesStatus"],
                            SalesAmount: Results[i]["SalesAmount"],
                            Group: Results[i]["Group"]
                        });
                    }
                    //$('#TotalAmount').text('Total Amount : ' + (totalAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")));
                    //$('#TotalSalesAmount').text('Total Sales Amount : ' + totalSalesAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        //debugger;
        return sales;
    }
    function getUsersInfo(id) {
        var retItem;

        for (var i = 0; i < UserList.items.length; i++) {
            if (UserList.items[i].Id == id)
                retItem = UserList.items[i].User;
        }
        return retItem;
    }
    function getProductPackageInfo(id) {
        var retItem;

        for (var i = 0; i < ProductPackageList.items.length; i++) {
            if (ProductPackageList.items[i].Id == id)
                retItem = ProductPackageList.items[i].ProductPackageDescription;
        }

        return retItem;
    }
    function getUsersList(items) {
        var retList = new Array();

        for (var i = 0; i < items.length; i++) {
            retList.push(items[i].UserName);
        }

        return retList;
    }
    function getProductPackageList(items) {

        var retList = new Array();

        for (var i = 0; i < items.length; i++) {
            retList.push(items[i].ProductPackageDescription);
        }

        return retList;
    }
    function getUsers() {
        var users = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/User',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        users.push({
                            Id: Results[i]["Id"],
                            UserName: Results[i]["UserName"],
                            FirstName: Results[i]["FirstName"],
                            LastName: Results[i]["LastName"],
                            EmailAddress: Results[i]["EmailAddress"],
                            PhoneNumber: Results[i]["PhoneNumber"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return users;
    }
    function getProductPackage() {
        var productPackage = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/ProductPackage',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        productPackage.push({
                            Id: Results[i]["Id"],
                            ProductPackageDescription: Results[i]["ProductPackageDescription"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return productPackage;
    }

    function UpdateNavigateButtonsSale() {
        if (Sales.pageSize <= 0) {
            document.getElementById('naviagtionPageSale').style.display = 'none';
            return;
        }
        document.getElementById('naviagtionPageSale').style.display = 'block';
        if (Sales.pageIndex === 0) {
            btnFirstPageSale.setAttribute('disabled', 'disabled');
            btnPreviousPageSale.setAttribute('disabled', 'disabled');
            btnNextPageSale.removeAttribute('disabled');
            btnLastPageSale.removeAttribute('disabled');
        }
        else if (Sales.pageIndex === (Sales.pageCount - 1)) {
            btnFirstPageSale.removeAttribute('disabled');
            btnPreviousPageSale.removeAttribute('disabled');
            btnLastPageSale.setAttribute('disabled', 'disabled');
            btnNextPageSale.setAttribute('disabled', 'disabled');
        }
        else {
            btnFirstPageSale.removeAttribute('disabled');
            btnPreviousPageSale.removeAttribute('disabled');
            btnNextPageSale.removeAttribute('disabled');
            btnLastPageSale.removeAttribute('disabled');
        }
        btnCurrentPageSale.innerHTML = (Sales.pageIndex + 1) + ' / ' + Sales.pageCount;
    }

    function CmdSaveXLS_OnClick() {
        var SLR = '';
        var record = [];

        for (i = 0; i < SalesLedgerSaveData.length; i++) {
            record.push({
                SalesNumber: SalesLedgerSaveData[i].SalesNumber,
                SalesDate: SalesLedgerSaveData[i].SalesDate,
                Name: SalesLedgerSaveData[i].FullName,
                User: SalesLedgerSaveData[i].User,
                ProductPackage: SalesLedgerSaveData[i].ProductPackage,
                Amount: SalesLedgerSaveData[i].Amount,
                Group: SalesLedgerSaveData[i].Group,
                SalesStatus: SalesLedgerSaveData[i].SalesStatus,
                SalesAmount: SalesLedgerSaveData[i].SalesAmount
            });
        }

        SLR += 'Sales Ledger Record' + '\r\n\n';

        var recordLabelRow = '';
        for (var s in record[0]) {
            recordLabelRow += s + ',';
        }
        recordLabelRow = recordLabelRow.slice(0, -1);
        SLR += recordLabelRow + '\r\n';

        for (var i = 0; i < record.length; i++) {
            var recordRow = '';
            for (var s in record[i]) {
                recordRow += '"' + record[i][s] + '",';
            }
            recordRow.slice(0, recordRow.length - 1);
            SLR += recordRow + '\r\n';
        }

        SLR += '\r\n' + 'Total Amount: ' + $('#TotalAmount').text() + '\r\n' + 'Total Sales Amount: ' + $('#TotalSalesAmount').text();

        if (SLR == '') {
            alert("No data");
            return;
        }

        // Create filename

        var fileName = 'magenta_' + '_' + 'sales.CSV';

        // Download via <a> link

        var link = document.createElement("a");

        if (link.download !== undefined) {
            var blob = new Blob([SLR], { type: 'text/csv;charset=utf-8;' });
            var url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", fileName);
            link.style = "visibility:hidden";
        }

        if (navigator.msSaveBlob) {
            link.addEventListener("click", function (event) {
                var blob = new Blob([SLR], {
                    "type": "text/csv;charset=utf-8;"
                });
                navigator.msSaveBlob(blob, fileName);
            }, false);
        }

        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

    }

    function FormValidate() {
        var validator = $('form').validate({
            submitHandler: function (form) {
                form.submit();
            }
        });

        var x = validator.form();
        return x;
    }

    $.validator.setDefaults({
        errorPlacement: function (error, element) {
            $(element).attr({ "title": error.append() });
        },
        highlight: function (element) {
            //$(element).css({"border": "2px solid #CC0000"});
            $(element).removeClass("textinput");
            $(element).addClass("errorHighlight");
        },
        unhighlight: function (element) {
            //$(element).css({"border": "2px solid #CC0000"});
            $(element).removeClass("errorHighlight");
            $(element).addClass("textinput");
        }
    });

    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "3000",
        "extendedTimeOut": 0,
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut",
        "tapToDismiss": false
    }

    function MakeGrid()
    {
        SalesGrid.dispose();
        SalesGrid = new wijmo.grid.FlexGrid('#SalesGrid');
        SalesGrid.initialize({
            columns: [
                {
                    "header": "Edit",
                    "binding": "EditId",
                    "width": 60,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Delete",
                    "binding": "DeleteId",
                    "width": 60,
                    "allowSorting": false,
                    "isContentHtml": true
                },
                {
                    "header": "Sale Date",
                    "binding": "SalesDate",
                    "allowSorting": true,
                    "width": 100,
                    "visible": true
                },
                {
                    "header": "Sales Number",
                    "binding": "SalesNumber",
                    "allowSorting": true,
                    "width": 110
                },
                {
                    "header": "Name",
                    "binding": "FullName",
                    "allowSorting": true,
                    "width": "2*"
                },
                {
                    "header": "Username",
                    "binding": "User",
                    "allowSorting": true,
                    "width": "2*"
                },
                {
                    "header": "Product Package",
                    "binding": "ProductPackage",
                    "allowSorting": true,
                    "width": "4*",
                    "wordWrap": false
                },
                {
                    "header": "Group",
                    "binding": "Group",
                    "allowSorting": true,
                    "width": 80
                },
                {
                    "header": "Renewal Date",
                    "binding": "RenewalDate",
                    "allowSorting": true,
                    "width": 100,
                    "visible": false
                },
                {
                    "header": "Expiry Date",
                    "binding": "ExpiryDate",
                    "allowSorting": true,
                    "width": 100,
                    "visible": false
                },
                {
                    "header": "Particulars",
                    "binding": "Particulars",
                    "allowSorting": true,
                    "width": "4*",
                    "visible": false
                },
                {
                    "header": "Quantity",
                    "binding": "Quantity",
                    "allowSorting": true,
                    "width": 80,
                    "visible": false
                },
                {
                    "header": "Price",
                    "binding": "Price",
                    "allowSorting": true,
                    "width": 80,
                    "visible": false
                },
                {
                    "header": "Amount",
                    "binding": "Amount",
                    "allowSorting": true,
                    "width": 80
                },
                {
                    "header": "Status",
                    "binding": "SalesStatus",
                    "allowSorting": true,
                    "width": 80
                },
                {
                    "header": "Sales Amount",
                    "binding": "SalesAmount",
                    "allowSorting": true,
                    "width": 80
                }
            ],
            autoGenerateColumns: false,
            itemsSource: Sales,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        SalesGrid.trackChanges = true;

        Sales.pageSize = 15;

        Sales.collectionChanged.addHandler(function (sender, args) {
            UpdateNavigateButtonsSale();
        });

        UpdateNavigateButtonsSale();

        // Page Button Events
        btnFirstPageSale.addEventListener('click', function () {
            Sales.moveToFirstPage();
            UpdateNavigateButtonsSale();
        });
        btnPreviousPageSale.addEventListener('click', function () {
            Sales.moveToPreviousPage();
            UpdateNavigateButtonsSale();
        });
        btnNextPageSale.addEventListener('click', function () {
            Sales.moveToNextPage();
            UpdateNavigateButtonsSale();
        });
        btnLastPageSale.addEventListener('click', function () {
            Sales.moveToLastPage();
            UpdateNavigateButtonsSale();
        });
    }

    $(document).ready(function () {

        toastr.options.preventDuplicates = true;

        $('#CmdSaleEditOk').click(function () {
            if (FormValidate() == true) {
                CmdSaleEditOkFunction();
                $('#SaleEdit').modal('hide');
            }
            else
                toastr.error('Sales Number, Quantity, and Price should be numeric.', 'Fill in all the required fields!');
        });

        $('#CmdSaleEditCancel, .close').click(function () {
            $("form input").removeClass("errorHighlight");
            $('form')[0].reset();
            $('#SaleEdit').modal('hide');
        });

        $('#SaveSaleLedger').click( function(){
            CmdSaveXLS_OnClick();
        });

        Sales = new wijmo.collections.CollectionView(GetSales());
        btnFirstPageSale = document.getElementById('btnMoveToFirstPageSale');
        btnPreviousPageSale = document.getElementById('btnMoveToPreviousPageSale');
        btnNextPageSale = document.getElementById('btnMoveToNextPageSale');
        btnLastPageSale = document.getElementById('btnMoveToLastPageSale');
        btnCurrentPageSale = document.getElementById('btnCurrentPageSale');

        UserList = new wijmo.collections.CollectionView(getUsers());
        ProductPackageList = new wijmo.collections.CollectionView(getProductPackage());

        var StartDateFilter = new wijmo.input.InputDate('#SalesDateStartFilter', {
            format: 'yyyy-MM-dd',
            value: new Date()
        });

        var EndDateFilter = new wijmo.input.InputDate('#SalesDateEndFilter', {
            format: 'yyyy-MM-dd',
            value: new Date()
        });

        $('#SearchFilter').click(function () {
            var dateStart = $('#StartDateFilter').find('input').val();
            var dateEnd = $('#EndDateFilter').find('input').val();
            var packageGroup = $('#GroupList_Data').val();
            var status = $('#StatusList_Data').val();
            console.log(dateStart + " " + dateEnd + " " + packageGroup + " " + status);
            getFilteredSales(dateStart, dateEnd, packageGroup, status);
        });

        SalesGrid = new wijmo.grid.FlexGrid('#SalesGrid');

        SaleDate = new wijmo.input.InputDate('#SaleEdit_SaleDate', {
            format: 'M/d/yyyy',
            value: new Date()
        });

        RenewalDate = new wijmo.input.InputDate('#SaleEdit_RenewalDate', {
            format: 'M/d/yyyy',
            value: new Date()
        });

        ExpiryDate = new wijmo.input.InputDate('#SaleEdit_ExpiryDate', {
            format: 'M/d/yyyy',
            value: new Date()
        });

        ac = new wijmo.input.AutoComplete('#cboSaleEdit_UserId', {
            itemsSource: getUsersList(UserList.items),
            placeholder: 'Select User ',
            onSelectedIndexChanged: function (e, data) {
                $("#SaleEdit_UserId").val(UserList.items[this.selectedIndex].Id);
            }
        });

        ax = new wijmo.input.AutoComplete('#cboSaleEdit_ProductPackageId', {
            itemsSource: getProductPackageList(ProductPackageList.items),
            placeholder: 'Select Product Package ',
            onSelectedIndexChanged: function (e, data) {
                $("#SaleEdit_ProductPackageId").val(ProductPackageList.items[this.selectedIndex].Id);
            }
        });

        $('.scroll').slimscroll({
            height: '450px'
        });
    });
</script>

