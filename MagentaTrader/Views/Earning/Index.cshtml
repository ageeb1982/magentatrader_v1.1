
@{
    ViewBag.Title = "Index";
}

<link href="/css/bootstrap.min.css" rel="stylesheet" />
<link href="/css/styles.css" rel="stylesheet" />

<script src="/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>

<script src="/js/date.js"></script>

<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.chart.min.js"></script>

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />

<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container topnav">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"></span></a>
        </div>
    </div>
</nav>

<div class="container">
    <div class="row">
        <h2 class="section-heading">&nbsp;</h2>
        <div class="col-lg-4">
            <select id="Year" class="form-control">
                <option value="2003">2003</option>
                <option value="2004">2004</option>
                <option value="2005">2005</option>
                <option value="2006">2006</option>
                <option value="2007">2007</option>
                <option value="2008">2008</option>
                <option value="2009">2009</option>
                <option value="2010">2010</option>
                <option value="2011">2011</option>
                <option value="2012">2012</option>
                <option value="2013">2013</option>
                <option value="2014">2014</option>
                <option value="2015">2015</option>
                <option value="2016">2016</option>
                <option value="2017">2017</option>
            </select>
        </div>
        <div class="col-lg-4">
            <input type="text" class="form-control" id="Symbol" placeholder="Symbol">
        </div>
        <div class="col-lg-4">
            <button id="CmdGetEarnings" type="submit" class="btn btn-primary btn-block" onclick="CmdGetEarnings_OnClick()">Get Earnings</button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-11">
            <h4>Earnings</h4>
        </div>
        <div class="col-lg-1">
            <button id="CmdAddEarnings" type="submit" class="btn btn-primary" onclick="CmdEarningsAdd_OnClick()">Add</button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-12">
            <div id="EarningsGrid" class="grid"></div>
        </div>
    </div>
</div>

@*Loading*@
<div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true">
    <div class="modal-dialog" style="width: 220px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <img src="/img/progress_bar.gif" />
            </div>
        </div>
    </div>
</div>

@*Edit Detail*@
<div class="modal fade" id="EarningsEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Earnings Edit</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Symbol</dt>
                    <dd>
                        <input class="form-control" id="EarningsEdit_Id" type="hidden" />
                        <input class="form-control" id="EarningsEdit_Symbol" type="text" />
                    </dd>
                    <dt>Date (YYYY-MM-DD)</dt>
                    <dd>
                        <input class="form-control" id="EarningsEdit_EarningDate" type="text" />
                    </dd>
                    <dt>Announcement</dt>
                    <dd>
                        <select class="form-control custom-width" id="EarningsEdit_EarningTime">
                            <option value="After Market Close">After Market Close</option>
                            <option value="Before Market Open">Before Market Open</option>
                        </select>
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdEarningsEditOk" onclick="CmdEarningsEditOk_OnClick()">
                    Ok
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="CmdEarningsEditCancel">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@*Module*@
<script type="text/javascript">
    var Earnings;
    var EarningsGrid;

    function GetEarnings(symbol,year) {
        var earnings = new wijmo.collections.ObservableArray();
        $('#loading').modal('show');
        $.ajax({
            url: '/api/StockEarningYear/' + symbol + '/' + year,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                $('#loading').modal('hide');
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        earnings.push({
                            EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditEarnings' onclick='CmdEarningsEdit_OnClick()'>Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteEarnings' onclick='CmdEarningsDelete_OnClick()'>Delete</button>",
                            Id: Results[i]["Id"],
                            SymbolId: Results[i]["SymbolId"],
                            Symbol: Results[i]["Symbol"],
                            EarningDate: Results[i]["EarningDate"],
                            EarningTime: Results[i]["EarningTime"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return earnings;
    }
    function CmdGetEarnings_OnClick() {
        var symbol = document.getElementById('Symbol').value;
        var year = parseInt(document.getElementById('Year').value);

        Earnings = new wijmo.collections.CollectionView(GetEarnings(symbol, year));
        Earnings.pageSize = 15;

        EarningsGrid.dispose();
        EarningsGrid = new wijmo.grid.FlexGrid('#EarningsGrid');
        EarningsGrid.initialize({
            columns: [
                        {
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Symbol",
                            "binding": "Symbol",
                            "allowSorting": false,
                            "width": 80
                        },
                        {
                            "header": "Date",
                            "binding": "EarningDate",
                            "allowSorting": false,
                            "width": "2*"
                        },
                        {
                            "header": "Announcement",
                            "binding": "EarningTime",
                            "allowSorting": false,
                            "width": "2*"
                        }
            ],
            autoGenerateColumns: false,
            itemsSource: Earnings,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });
        EarningsGrid.trackChanges = true;
    }

    function CmdEarningsAdd_OnClick() {
        $('#EarningsEdit').modal({
            show: true,
            backdrop: false
        });

        document.getElementById('EarningsEdit_Id').value = 0;
        document.getElementById('EarningsEdit_Symbol').value = "";
        document.getElementById('EarningsEdit_EarningDate').value = "";
        document.getElementById('EarningsEdit_EarningTime').value = "After Market Close";
    }
    function CmdEarningsEdit_OnClick() {
        Earnings.editItem(Earnings.currentItem);

        $('#EarningsEdit').modal({
            show: true,
            backdrop: false
        });

        var EditEarnings = Earnings.currentEditItem;
        document.getElementById('EarningsEdit_Id').value = EditEarnings.Id !== null && typeof (EditEarnings.Id) != 'undefined' ? wijmo.Globalize.format(EditEarnings.Id) : '';
        document.getElementById('EarningsEdit_Symbol').value = EditEarnings.Symbol ? EditEarnings.Symbol : '';
        document.getElementById('EarningsEdit_EarningDate').value = EditEarnings.EarningDate ? EditEarnings.EarningDate : '';
        document.getElementById('EarningsEdit_EarningTime').value = EditEarnings.EarningTime ? EditEarnings.EarningTime : '';
    }
    function CmdEarningsDelete_OnClick() {
        Earnings.editItem(Earnings.currentItem);

        var Id = Earnings.currentEditItem.Id;
        var EarningDate = Earnings.currentEditItem.EarningDate;

        if (confirm("Delete " + EarningDate + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteStockEarning/" + Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        CmdGetEarnings_OnClick();
                    },
                    404: function () {
                        alert("Not found");
                    },
                    400: function () {
                        alert("Bad request");
                    }
                }
            });
        }
    }
    function CmdEarningsEditOk_OnClick() {
        if (confirm("Save Earnings?") == true) {

            var Earning = new Object();

            Earning.Id = document.getElementById('EarningsEdit_Id').value;
            Earning.Symbol = document.getElementById('EarningsEdit_Symbol').value.toUpperCase();
            Earning.EarningDate = document.getElementById('EarningsEdit_EarningDate').value;
            Earning.EarningTime = document.getElementById('EarningsEdit_EarningTime').value;

            var data = JSON.stringify(Earning);

            // Add New
            if (Earning.Id == 0) {
                $.ajax({
                    type: "POST",
                    url: "/api/AddStockEarning",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    success: function (id) {
                        if (id > 0) {
                            CmdGetEarnings_OnClick();
                        } else {
                            alert("Not added");
                        }
                    }
                });

                // Edit
            } else {
                $.ajax({
                    type: "PUT",
                    url: "/api/UpdateStockEarning/" + Earning.Id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            CmdGetEarnings_OnClick();
                        },
                        404: function () {
                            alert("Not found");
                        },
                        400: function () {
                            alert("Bad request");
                        }
                    }
                });
            }
        }
    }

    $(document).ready(function () {
        EarningsGrid = new wijmo.grid.FlexGrid('#EarningsGrid');
    });
</script>

