@{
    //ViewBag.Title = "Index";

    var Version = "v.Beta.1.20161112";
}

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />
<link href="/css/toastr.css" rel="stylesheet" />

<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/knockout-3.2.0.js"></script>
<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>
<script src="/js/date.js"></script>
<script src="/js/toastr.js"></script>

<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container topnav">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"> - Alerts @Version</span></a>
        </div>
    </div>
</nav>

<div class="container">

    <!-- Heading: Id, Description, AlertVia, IsActive-->
    <div class="row">
        <h2 class="section-heading">Alert</h2>
        <input type="hidden" class="form-control" id="Id">
        <input type="hidden" class="form-control" id="Description">
        <div class="col-lg-4">
            <p>Alert Via</p>
            <select id="AlertVia" class="form-control">
                <option value="Email">Email</option>
            </select>
        </div>
        <div class="col-lg-2">
            <p>Active</p>
            <input class="form-control" id="IsActive" type="checkbox" />
        </div>
        <div class="col-lg-6">
            <p></p>
            <div class="input-group">
                <span class="input-group-btn">
                    <button id="CmdDownloadResult" type="submit" class="btn btn-info pull-right" onclick="CmdDownloadResult_OnClick()">
                        <span>Download Alert Results</span>
                    </button>
                    <button id="CmdSaveAlert" type="submit" class="btn btn-primary pull-right" onclick="CmdSaveAlert_OnClick()">
                        <span>Save Alert Settings</span>
                    </button>
                </span>
            </div>
        </div>
    </div>

    <br />

    <!-- SymbolFilter: SymbolExchange, SymbolFavorites -->
    <h4><input type="checkbox" id="SymbolFilter" /> - Symbols</h4>
    <div class="row" id="SymbolFilterDiv">
        <div class="col-lg-4">
            <p>Exchanges</p>
            <select id="SymbolExchange" class="form-control" onchange="SymbolExchange_OnChange()">
                <option value="ALL">All</option>
                <option value="US">All US Securities</option>
                <option value="FAV">Favorites</option>
                <option value="AMEX">AMEX</option>
                <option value="NASDAQ">NASDAQ</option>
                <option value="NYSE">NYSE</option>
                <option value="PSE">PSE</option>
                <option value="TSX">TSX</option>
                <option value="FOREX">FOREX</option>
            </select>
        </div>
        <div class="col-lg-4">
            <p>&nbsp;</p>
            <input type="hidden" class="form-control" id="SymbolUserFavoritesId">
            <select id="SymbolUserFavorites" class="form-control"></select>
        </div>
        @*<div class="col-lg-4">
            <p>Symbols Results</p>
            <input type="text" class="form-control" id="Result1" disabled>
        </div>*@
    </div>

    <br />

    <!-- StrategyFilter: Strategy, StrategyGrowthDecayRate, StrategyGrowthDecayTime -->
    <h4><input type="checkbox" id="StrategyFilter" /> - Strategy</h4>
    <div class="row" id="StrategyFilterDiv">
        <div class="col-lg-4">
            <p>Strategy</p>
            <select id="Strategy" class="form-control" onchange="Strategy_OnChange()">
                @*<option value="CUS" selected="selected">Customize</option>*@
                <option value="MEU" selected="selected">Magenta Early Up</option>
                <option value="MED">Magenta Early Down</option>
            </select>
        </div>
        <div class="col-lg-2">
            <p>Growth(Decay) Rate</p>
            <input type="text" class="form-control" id="StrategyGrowthDecayRate" placeholder="Growth(Decay) - [100]">
        </div>
        <div class="col-lg-2">
            <p>Growth(Decay) Time</p>
            <select id="StrategyGrowthDecayTime" class="form-control">
                <option value="C0">Current Trend</option>
                <option value="W1">One Week</option>
                <option value="W2">Two Weeks</option>
                <option value="W3">Three Weeks</option>
                <option value="M1">One Month</option>
                <option value="M2">Two Months</option>
                <option value="M3">Three Months</option>
            </select>
        </div>
        @*<div class="col-lg-4">
            <p>Strategy Results</p>
            <input type="text" class="form-control" id="Result2" disabled>
        </div>*@
    </div>  

    <br />

    <!-- MACDFilter: MACDCrossover, MACDEMA -->
    <h4><input type="checkbox" id="MACDFilter" /> - MACD</h4>
    <div class="row" id="MACDFilterDiv">
        <div class="col-lg-4">
            <p>MACD Crossover</p>
            <select id="MACDCrossover" class="form-control">
                <option value="ALL">All</option>
                <option value="UP">Up</option>
                <option value="DOWN">Down</option>
            </select>
        </div>
        <div class="col-lg-4">
            <p>MACD Crossover Occurs EMA</p>
            <select id="MACDEMA" class="form-control">
                <option value="EITHER">Either</option>
                <option value="BEFORE">Before EMA</option>
                <option value="AFTER">After EMA</option>
            </select>
        </div>
        @*<div class="col-lg-4">
            <p>MACD Results</p>
            <input type="text" class="form-control" id="Result3" disabled>
        </div>*@
    </div>

    <br />
    
    <!-- MagentaChannelFilter: MagentaChannelBegins, MagentaChannelCorrelation30, MagentaChannelDays, MagentaChannelAGRADR -->
    <h4><input type="checkbox" id="MagentaChannelFilter" /> - Magenta Channel</h4>
    <div class="row" id="MagentaChannelFilterDiv">
        <div class="col-lg-2">
            <p>Begins</p>
            <select id="MagentaChannelBegins" class="form-control">
                <option value="ALL">Anywhere</option>
                <option value="MACD">MACD Crossover</option>
                <option value="EMA">EMA Crossover</option>
            </select>
        </div>
        <div class="col-lg-2">
            <p>Greater Linear</p>
            <select id="MagentaChannelCorrelation30" class="form-control">
                <option value="10" selected="selected">0.10</option>
                <option value="20">0.20</option>
                <option value="30">0.30</option>
                <option value="40">0.40</option>
                <option value="50">0.50</option>
                <option value="60">0.60</option>
                <option value="70">0.70</option>
                <option value="80">0.80</option>
                <option value="90">0.90</option>
                <option value="100">1.00</option>
            </select>
        </div>
        <div class="col-lg-2">
            <p>Min No of Days</p>
            <select id="MagentaChannelDays" class="form-control">
                <option value="0" selected="selected">NA</option>
                <option value="5">5 Days</option>
                <option value="10">10 Days</option>
                <option value="15">10 Days</option>
                <option value="20">20 Days</option>
                <option value="25">25 Days</option>
                <option value="30">30 Days</option>
            </select>
        </div>
        <div class="col-lg-2">
            <p>AGR/ADR</p>
            <input type="text" class="form-control" id="MagentaChannelAGRADR" placeholder="1-100% (ADR Negative)">
        </div>
        @*<div class="col-lg-4">
            <p>Magenta Channel Results</p>
            <input type="text" class="form-control" id="Result4" disabled>
        </div>*@
    </div>

    <br />
    
    <!-- SeasonalityFilter: SeasonalityWinLossPercent, SeasonalityGainLossPercent -->
    <h4><input type="checkbox" id="SeasonalityFilter" /> - Seasonality</h4>
    <div class="row" id="SeasonalityFilterDiv">
        <div class="col-lg-4">
            <p>Win/Loss %</p>
            <input type="text" class="form-control" id="SeasonalityWinLossPercent" placeholder="Win/Loss%(-)">
        </div>
        <div class="col-lg-4">
            <p>Gains(Losses) %</p>
            <input type="text" class="form-control" id="SeasonalityGainLossPercent" placeholder="Gain/Loss%(-)">
        </div>
        @*<div class="col-lg-4">
            <p>Seasonality Results</p>
            <input type="text" class="form-control" id="Result5" disabled>
        </div>*@
    </div>

    <br />

    <!-- AdditionalFilter: AdditionalFilterPrice, AdditionalFilterVolume, AdditionalFilterNoOfYears -->
    <h4><input type="checkbox" id="AdditionalFilter" /> - Additional Filters</h4>
    <div class="row" id="AdditionalFilterDiv">
        <div class="col-lg-4">
            <p>Min Price</p>
            <input type="text" class="form-control" id="AdditionalFilterPrice" placeholder="Price - [US $10]">
        </div>
        <div class="col-lg-2">
            <p>Min Volume</p>
            <input type="text" class="form-control" id="AdditionalFilterVolume" placeholder="Volume - [1M]">
        </div>
        <div class="col-lg-2">
            <p>No. of Years</p>
            <select id="AdditionalFilterNoOfYears" class="form-control">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8" selected="selected">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
            </select>
        </div>
        @*<div class="col-lg-4">
            <p>Additional Filter Results</p>
            <input type="text" class="form-control" id="Result6" disabled>
        </div>*@
    </div>

    <br />

    <h4>Results</h4>
    <div class="row">
        <div class="col-lg-12">
            <div id="UserAlertGrid" class="grid"></div>
            <div class="row">
                <div class="btn-group col-md-7" id="NavPage">
                    <button type="button" class="btn btn-default" id="NavFirstPage">
                        <span class="glyphicon glyphicon-fast-backward"></span>
                    </button>
                    <button type="button" class="btn btn-default" id="NavPreviousPage">
                        <span class="glyphicon glyphicon-step-backward"></span>
                    </button>
                    <button type="button" class="btn btn-default" disabled style="width:100px" id="NavCurrentPage"></button>
                    <button type="button" class="btn btn-default" id="NavNextPage">
                        <span class="glyphicon glyphicon-step-forward"></span>
                    </button>
                    <button type="button" class="btn btn-default" id="NavLastPage">
                        <span class="glyphicon glyphicon-fast-forward"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    var currentUser;

    var UserAlertData;
    var UserAlertCollection;
    var UserAlertGrid;

    var NavFirstPage;
    var NavPreviousPage;
    var NavNextPage;
    var NavLastPage;
    var NavCurrentPage;

    // Events
    function SymbolExchange_OnChange() {
        var $symbolExchange = document.getElementById('SymbolExchange').value;
        if ($symbolExchange=="FAV") {
            document.getElementById('SymbolUserFavorites').style.visibility = 'visible';
        } else {
            document.getElementById('SymbolUserFavorites').style.visibility = 'hidden';
        }
    }
    function Strategy_OnChange() {
        var Strategy = document.getElementById('Strategy').value;
        switch (Strategy) {
            case "CUS":
                document.getElementById('StrategyGrowthDecayRate').disabled = false;
                document.getElementById('StrategyGrowthDecayTime').disabled = false;
                break;
            case "MEU":
            case "MED":
                document.getElementById('StrategyGrowthDecayRate').disabled = true;
                document.getElementById('StrategyGrowthDecayTime').disabled = true;
                break;
        }
    }
    function CmdDownloadResult_OnClick() {
        var CSV = '';
        var alertSymbols = [];

        for (i = 0; i < UserAlertData.length; i++) {
            alertSymbols.push({
                Symbol: UserAlertData[i].SymbolRaw,
                Description: UserAlertData[i].Description,
                Exchange: UserAlertData[i].Exchange,
                ClosePrice: UserAlertData[i].ClosePrice,
                Volume: UserAlertData[i].Volume,
                NoOfYears: UserAlertData[i].NoOfYears,
                TrendNoOfDays: UserAlertData[i].TrendNoOfDays,
                GrowthDecayRate: UserAlertData[i].GrowthDecayRate,
                GrowthDecayRateW1: UserAlertData[i].GrowthDecayRateW1,
                GrowthDecayRateW2: UserAlertData[i].GrowthDecayRateW2,
                GrowthDecayRateW3: UserAlertData[i].GrowthDecayRateW3,
                GrowthDecayRateM1: UserAlertData[i].GrowthDecayRateM1,
                GrowthDecayRateM2: UserAlertData[i].GrowthDecayRateM2,
                GrowthDecayRateM3: UserAlertData[i].GrowthDecayRateM3,
                WinLossCurrent30: UserAlertData[i].WinLossCurrent30,
                WinLossAverageCurrent30: UserAlertData[i].WinLossAverageCurrent30,
                WinLoss20: UserAlertData[i].WinLoss20Raw,
                WinLossAverage20: UserAlertData[i].WinLossAverage20,
                WinLoss40: UserAlertData[i].WinLoss40Raw,
                WinLossAverage40: UserAlertData[i].WinLossAverage40,
                WinLoss60: UserAlertData[i].WinLoss60Raw,
                WinLossAverage60: UserAlertData[i].WinLossAverage60,
                CorrelationCoefficient30: UserAlertData[i].CorrelationCoefficient30,
                SeasonalityCorrelation: UserAlertData[i].SeasonalityCorrelation,
                MACDTrendNoOfDays: UserAlertData[i].MACDTrendNoOfDays,
                MACDGrowthDecayRate: UserAlertData[i].MACDGrowthDecayRate,
                EMATrendNoOfDays: UserAlertData[i].EMATrendNoOfDays,
                EMAGrowthDecayRate: UserAlertData[i].EMAGrowthDecayRate,
                EMAStartDate: UserAlertData[i].EMAStartDate,
                EMALinear: UserAlertData[i].EMALinear
            });
        }

        CSV += 'Alert Symbol Results Data' + '\r\n\n';

        var alertSymbolsLabelRow = '';
        for (var s in alertSymbols[0]) {
            alertSymbolsLabelRow += s + ',';
        }
        alertSymbolsLabelRow = alertSymbolsLabelRow.slice(0, -1);
        CSV += alertSymbolsLabelRow + '\r\n';

        for (var i = 0; i < alertSymbols.length; i++) {
            var alertSymbolsRow = '';
            for (var s in alertSymbols[i]) {
                alertSymbolsRow += '"' + alertSymbols[i][s] + '",';
            }
            alertSymbolsRow.slice(0, alertSymbolsRow.length - 1);
            CSV += alertSymbolsRow + '\r\n';
        }

        if (CSV == '') {
            toastr.error("No data");
            return;
        }

        // Create filename
        var fileName = 'alert_symbols.CSV';

        // Download via <a> link

        var link = document.createElement("a");

        if (link.download !== undefined) {
            var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
            var url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", fileName);
            link.style = "visibility:hidden";
        }

        if (navigator.msSaveBlob) {
            link.addEventListener("click", function (event) {
                var blob = new Blob([CSV], {
                    "type": "text/csv;charset=utf-8;"
                });
                navigator.msSaveBlob(blob, fileName);
            }, false);
        }

        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

    }
    function CmdSaveAlert_OnClick() {
        SaveUserAlert();
    }
    function UpdateNavPage() {
        if (UserAlertCollection.pageSize <= 0) {
            document.getElementById('NavPage').style.display = 'none';
            return;
        }
        document.getElementById('NavPage').style.display = 'block';
        if (UserAlertCollection.pageIndex === 0) {
            NavFirstPage.setAttribute('disabled', 'disabled');
            NavPreviousPage.setAttribute('disabled', 'disabled');
            NavNextPage.removeAttribute('disabled');
            NavLastPage.removeAttribute('disabled');
        }
        else if (UserAlertCollection.pageIndex === (UserAlertCollection.pageCount - 1)) {
            NavFirstPage.removeAttribute('disabled');
            NavPreviousPage.removeAttribute('disabled');
            NavNextPage.setAttribute('disabled', 'disabled');
            NavLastPage.setAttribute('disabled', 'disabled');
        }
        else {
            NavFirstPage.removeAttribute('disabled');
            NavPreviousPage.removeAttribute('disabled');
            NavNextPage.removeAttribute('disabled');
            NavLastPage.removeAttribute('disabled');
        }
        NavCurrentPage.innerHTML = (UserAlertCollection.pageIndex + 1) + ' / ' + UserAlertCollection.pageCount;
    }
    function AddListenerNavPage() {
        NavFirstPage.addEventListener('click', function () {
            UserAlertCollection.moveToFirstPage();
            UpdateNavPage();
        });
        NavPreviousPage.addEventListener('click', function () {
            UserAlertCollection.moveToPreviousPage();
            UpdateNavPage();
        });
        NavNextPage.addEventListener('click', function () {
            UserAlertCollection.moveToNextPage();
            UpdateNavPage();
        });
        NavLastPage.addEventListener('click', function () {
            UserAlertCollection.moveToLastPage();
            UpdateNavPage();
        });
    }

    // Data
    function GetUserAlert() {
        $.ajax({
            url: '/api/GetUserAlert/' + currentUser,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                if (result.Id > 0) {
                    document.getElementById('Id').value = result.Id;
                    document.getElementById('Description').value = result.Description;
                    document.getElementById('AlertVia').value = result.AlertVia;
                    document.getElementById('IsActive').checked = result.IsActive;

                    document.getElementById('SymbolFilter').checked = result.SymbolFilter;
                    document.getElementById('SymbolExchange').value = result.SymbolExchange;
                    document.getElementById('SymbolUserFavoritesId').value = result.SymbolUserFavoritesId;
                    document.getElementById('SymbolUserFavorites').value = result.SymbolUserFavorites;

                    document.getElementById('StrategyFilter').checked = result.StrategyFilter;
                    document.getElementById('Strategy').value = result.Strategy;
                    document.getElementById('StrategyGrowthDecayRate').value = result.StrategyGrowthDecayRate;
                    document.getElementById('StrategyGrowthDecayTime').value = result.StrategyGrowthDecayTime;

                    document.getElementById('MACDFilter').checked = result.MACDFilter;
                    document.getElementById('MACDCrossover').value = result.MACDCrossover;
                    document.getElementById('MACDEMA').value = result.MACDEMA;

                    document.getElementById('MagentaChannelFilter').checked = result.MagentaChannelFilter;
                    document.getElementById('MagentaChannelBegins').value = result.MagentaChannelBegins;
                    document.getElementById('MagentaChannelCorrelation30').value = result.MagentaChannelCorrelation30;
                    document.getElementById('MagentaChannelDays').value = result.MagentaChannelDays;
                    document.getElementById('MagentaChannelAGRADR').value = result.MagentaChannelAGRADR;

                    document.getElementById('SeasonalityFilter').checked = result.SeasonalityFilter;
                    document.getElementById('SeasonalityWinLossPercent').value = result.SeasonalityWinLossPercent;
                    document.getElementById('SeasonalityGainLossPercent').value = result.SeasonalityGainLossPercent;

                    document.getElementById('AdditionalFilter').checked = result.AdditionalFilter;
                    document.getElementById('AdditionalFilterPrice').value = result.AdditionalFilterPrice;
                    document.getElementById('AdditionalFilterVolume').value = result.AdditionalFilterVolume;
                    document.getElementById('AdditionalFilterNoOfYears').value = result.AdditionalFilterNoOfYears;

                    GetUserAlertSymbols(result.Id, result.Strategy);
                    ExpandCollapseFilters();
                    SymbolExchange_OnChange();
                    Strategy_OnChange();
                } else {
                    document.getElementById('Id').value = 0;
                    document.getElementById('Description').value = "User Alert";
                }
            }
        });
    }
    function SaveUserAlert() {
        var userAlert = new Object();

        userAlert.Id = parseFloat(document.getElementById('Id').value);
        userAlert.UserId = 0;
        userAlert.User = currentUser;
        userAlert.Description = document.getElementById('Description').value;
        userAlert.IsActive = document.getElementById('IsActive').checked;
        userAlert.EncodedDate = new Date();
        userAlert.AlertVia = document.getElementById('AlertVia').value;

        userAlert.SymbolFilter = document.getElementById('SymbolFilter').checked;
        userAlert.SymbolExchange = document.getElementById('SymbolExchange').value;
        userAlert.SymbolUserFavoritesId = document.getElementById('SymbolUserFavoritesId').value;
        userAlert.SymbolUserFavorites = document.getElementById('SymbolUserFavorites').value;

        userAlert.StrategyFilter = document.getElementById('StrategyFilter').checked;
        userAlert.Strategy = document.getElementById('Strategy').value;
        var $strategyGrowthDecayRate = parseFloat(document.getElementById('StrategyGrowthDecayRate').value); 
        userAlert.StrategyGrowthDecayRate = !$strategyGrowthDecayRate ? 0 : $strategyGrowthDecayRate;
        userAlert.StrategyGrowthDecayTime = document.getElementById('StrategyGrowthDecayTime').value;

        userAlert.MACDFilter = document.getElementById('MACDFilter').checked;
        userAlert.MACDCrossover = document.getElementById('MACDCrossover').value;
        userAlert.MACDEMA = document.getElementById('MACDEMA').value;

        userAlert.MagentaChannelFilter = document.getElementById('MagentaChannelFilter').checked;
        userAlert.MagentaChannelBegins = document.getElementById('MagentaChannelBegins').value;
        var $magentaChannelCorrelation30 = parseInt(document.getElementById('MagentaChannelCorrelation30').value);
        userAlert.MagentaChannelCorrelation30 = !$magentaChannelCorrelation30 ? 0 : $magentaChannelCorrelation30;
        var $magentaChannelDays = parseInt(document.getElementById('MagentaChannelDays').value);
        userAlert.MagentaChannelDays = !$magentaChannelDays ? 0 : $magentaChannelDays;
        var $magentaChannelAGRADR = parseFloat(document.getElementById('MagentaChannelAGRADR').value); 
        userAlert.MagentaChannelAGRADR = !$magentaChannelAGRADR ? 0 : $magentaChannelAGRADR;

        userAlert.SeasonalityFilter = document.getElementById('SeasonalityFilter').checked;
        var $seasonalityWinLossPercent = parseFloat(document.getElementById('SeasonalityWinLossPercent').value);
        userAlert.SeasonalityWinLossPercent = !$seasonalityWinLossPercent ? 0 : $seasonalityWinLossPercent;
        var $seasonalityGainLossPercent = parseFloat(document.getElementById('SeasonalityGainLossPercent').value);
        userAlert.SeasonalityGainLossPercent = !$seasonalityGainLossPercent ? 0 : $seasonalityGainLossPercent;

        userAlert.AdditionalFilter = document.getElementById('AdditionalFilter').checked;
        var $additionalFilterPrice = parseFloat(document.getElementById('AdditionalFilterPrice').value);
        userAlert.AdditionalFilterPrice = !$additionalFilterPrice ? 0 : $additionalFilterPrice;
        var $additionalFilterVolume = parseFloat(document.getElementById('AdditionalFilterVolume').value);
        userAlert.AdditionalFilterVolume = !$additionalFilterVolume ? 0 : $additionalFilterVolume;
        var $additionalFilterNoOfYears = parseInt(document.getElementById('AdditionalFilterNoOfYears').value);
        userAlert.AdditionalFilterNoOfYears = !$additionalFilterNoOfYears ? 0 : $additionalFilterNoOfYears;

        var data = JSON.stringify(userAlert);

        if (userAlert.Id == 0) {
            $.ajax({
                type: "POST",
                url: "/api/AddUserAlert",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                success: function (id) {
                    if (id > 0) {
                        toastr.success("Success!");
                        GetUserAlert();
                    } else {
                        toastr.error("Server Error");
                    }
                }
            });
        } else {
            $.ajax({
                type: "PUT",
                url: "/api/UpdateUserAlert/" + userAlert.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        toastr.success("Success!");
                        GetUserAlert();
                    },
                    404: function () {
                        toastr.error("Not found");
                    },
                    400: function () {
                        toastr.error("Bad request");
                    }
                }
            });
        }
    } 
    function GetUserAlertSymbols(Id,Strategy) {
        if (Id > 0) {
            $.ajax({
                url: '/api/GetUserAlertSymbols/' + Id,
                type: 'GET',
                dataType: 'json',
                success: function (result) {
                    // Data
                    UserAlertData = new wijmo.collections.ObservableArray();
                    for (var i = 0; i < result.length; i++) {
                        UserAlertData.push({
                            Symbol: "<a href='/Software?symbol=" + result[i].SymbolDescription + "' target='_blank'><font color='black'>" + ReplaceSymbol(result[i].Exchange, result[i].SymbolDescription) + "</font></a>",
                            SymbolRaw: result[i].SymbolDescription,
                            Description: result[i].Description,
                            Exchange: result[i].Exchange,
                            ClosePrice: result[i].ClosePrice,
                            Volume: Math.round(result[i].Volume / 10000) / 100,
                            Rate: GetRate(StrategyGrowthDecayTime, result[i]),
                            GrowthDecayRate: Math.round(result[i].GrowthDecayRate),
                            GrowthDecayRateW1: Math.round(result[i].GrowthDecayRateW1),
                            GrowthDecayRateW2: Math.round(result[i].GrowthDecayRateW2),
                            GrowthDecayRateW3: Math.round(result[i].GrowthDecayRateW3),
                            GrowthDecayRateM1: Math.round(result[i].GrowthDecayRateM1),
                            GrowthDecayRateM2: Math.round(result[i].GrowthDecayRateM2),
                            GrowthDecayRateM3: Math.round(result[i].GrowthDecayRateM3),
                            NoOfYears: result[i].NoOfYears,
                            TrendNoOfDays: result[i].TrendNoOfDays,
                            WinLossCurrent30: result[i].WinLossCurrent30,
                            WinLossAverageCurrent30: result[i].WinLossAverageCurrent30,
                            WinLoss20: "<a href='javascript:;' onclick='OpenYearlyWinLoss(20);'><font color='black'>" + result[i].WinLoss20 + "</font></a>",
                            WinLossAverage20: result[i].WinLossAverage20,
                            WinLoss40: "<a href='javascript:;' onclick='OpenYearlyWinLoss(40);'><font color='black'>" + result[i].WinLoss40 + "</font></a>",
                            WinLossAverage40: result[i].WinLossAverage40,
                            WinLoss60: "<a href='javascript:;' onclick='OpenYearlyWinLoss(60);'><font color='black'>" + result[i].WinLoss60 + "</font></a>",
                            WinLoss20Raw: result[i].WinLoss20,
                            WinLoss40Raw: result[i].WinLoss40,
                            WinLoss60Raw: result[i].WinLoss60,
                            WinLossAverage60: result[i].WinLossAverage60,
                            CorrelationCoefficient30: result[i].CorrelationCoefficient30,
                            SeasonalityCorrelation: result[i].SeasonalityCorrelation,
                            MACDTrendNoOfDays: result[i].MACDGrowthDecayRate < 0 ? (result[i].MACDTrendNoOfDays * -1) : result[i].MACDTrendNoOfDays,
                            MACDGrowthDecayRate: result[i].MACDGrowthDecayRate,
                            EMATrendNoOfDays: result[i].EMAGrowthDecayRate < 0 ? (result[i].EMATrendNoOfDays * -1) : result[i].EMATrendNoOfDays,
                            EMAGrowthDecayRate: result[i].EMAGrowthDecayRate,
                            EMAStartDate: result[i].EMAStartDate,
                            EMALinear: result[i].EMALinear
                        });
                    }
                    // Collection
                    UserAlertCollection = new wijmo.collections.CollectionView(UserAlertData);
                    UserAlertCollection.pageSize = 10;
                    UserAlertCollection.collectionChanged.addHandler(function (sender, args) {
                        UpdateNavPage();
                    });
                    // Grid
                    UserAlertGrid.dispose();
                    UserAlertGrid = new wijmo.grid.FlexGrid('#UserAlertGrid');
                    UserAlertGrid.initialize({
                        columns: MakeUserAlertGridColumns(Strategy),
                        autoGenerateColumns: false,
                        itemsSource: UserAlertCollection,
                        isReadOnly: true,
                        selectionMode: wijmo.grid.SelectionMode.Row,
                        itemFormatter: function (panel, r, c, cell) {
                            if (wijmo.grid.CellType.Cell == panel.cellType &&
                                (panel.columns[c].binding == 'GrowthDecayRate' ||
                                panel.columns[c].binding == 'GrowthDecayRateW1' ||
                                panel.columns[c].binding == 'GrowthDecayRateW2' ||
                                panel.columns[c].binding == 'GrowthDecayRateW3' ||
                                panel.columns[c].binding == 'GrowthDecayRateM1' ||
                                panel.columns[c].binding == 'GrowthDecayRateM2' ||
                                panel.columns[c].binding == 'GrowthDecayRateM3' ||
                                panel.columns[c].binding == 'WinLossAverage20' ||
                                panel.columns[c].binding == 'WinLossAverage40' ||
                                panel.columns[c].binding == 'WinLossAverage60')) {
                                var cellData = panel.getCellData(r, c);
                                cell.style.color = GetRateColor(cellData);
                                cell.style.fontSize = "75%";
                            } else if (wijmo.grid.CellType.Cell == panel.cellType &&
                                        (panel.columns[c].binding == 'MACDTrendNoOfDays' ||
                                        panel.columns[c].binding == 'EMATrendNoOfDays' ||
                                        panel.columns[c].binding == 'EMAGrowthDecayRate')) {
                                var redColor = "#A80008";
                                var blueColor = "#070BB0";

                                var cellData = panel.getCellData(r, c);

                                if (cellData >= 0) {
                                    cell.style.color = blueColor;
                                } else {
                                    cell.style.color = redColor;
                                }

                                cell.style.fontSize = "75%";
                            } else if (wijmo.grid.CellType.ColumnHeader == panel.cellType) {
                                var cellData = panel.getCellData(r, c);
                                cell.style.fontSize = "70%";
                            } else {
                                var cellData = panel.getCellData(r, c);
                                cell.style.fontSize = "75%";
                            }
                        }
                    });
                    UserAlertGrid.trackChanges = true;
                    UpdateNavPage();
                }
            });
        }
    }
    function MakeUserAlertGridColumns(Strategy) {
        var gridColumns = [];
        switch (Strategy) {
            case "MEU":
            case "MED":
                gridColumns = [{
                    "header": "Symbol",
                    "binding": "Symbol",
                    "width": 70,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Price",
                    "binding": "ClosePrice",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Vol (M)",
                    "binding": "Volume",
                    "width": 50,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Years",
                    "binding": "NoOfYears",
                    "width": 35,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Correlation",
                    "binding": "SeasonalityCorrelation",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Trend",
                    "binding": "TrendNoOfDays",
                    "width": 35,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Linear",
                    "binding": "CorrelationCoefficient30",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-T",
                    "binding": "GrowthDecayRate",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "MACD",
                    "binding": "MACDTrendNoOfDays",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "EMA",
                    "binding": "EMATrendNoOfDays",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "EMA Rate",
                    "binding": "EMAGrowthDecayRate",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "EMA Start",
                    "binding": "EMAStartDate",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "EMA Linear",
                    "binding": "EMALinear",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "20 W/L %",
                    "binding": "WinLossAverage20",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "20 W/L",
                    "binding": "WinLoss20",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "40 W/L %",
                    "binding": "WinLossAverage40",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "40 W/L",
                    "binding": "WinLoss40",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "60 W/L %",
                    "binding": "WinLossAverage60",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "60 W/L",
                    "binding": "WinLoss60",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }];
                break;
            default:
                gridColumns = [{
                    "header": "Symbol",
                    "binding": "Symbol",
                    "width": 70,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Price",
                    "binding": "ClosePrice",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Vol (M)",
                    "binding": "Volume",
                    "width": 50,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Years",
                    "binding": "NoOfYears",
                    "width": 35,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Correlation",
                    "binding": "SeasonalityCorrelation",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Trend",
                    "binding": "TrendNoOfDays",
                    "width": 35,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Linear",
                    "binding": "CorrelationCoefficient30",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-T",
                    "binding": "GrowthDecayRate",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-W1",
                    "binding": "GrowthDecayRateW1",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-W2",
                    "binding": "GrowthDecayRateW2",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-W3",
                    "binding": "GrowthDecayRateW3",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-M1",
                    "binding": "GrowthDecayRateM1",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-M2",
                    "binding": "GrowthDecayRateM2",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "Rate-M3",
                    "binding": "GrowthDecayRateM3",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "20 W/L %",
                    "binding": "WinLossAverage20",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "20 W/L",
                    "binding": "WinLoss20",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "40 W/L %",
                    "binding": "WinLossAverage40",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "40 W/L",
                    "binding": "WinLoss40",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "60 W/L %",
                    "binding": "WinLossAverage60",
                    "width": "*",
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }, {
                    "header": "60 W/L",
                    "binding": "WinLoss60",
                    "width": 55,
                    "allowSorting": true,
                    "isContentHtml": true,
                    "wordWrap": true
                }];
                break;
        }
        return gridColumns;
    }

    // Utilities
    function ReplaceSymbol(exchange, symbol) {
        var returnSymbol;
        if (exchange == "TSX") {
            returnSymbol = symbol.replace("TSX-", "");
        } else if (exchange == "FOREX") {
            returnSymbol = symbol.replace("FX-", "");
        } else if (exchange == "PSE") {
            returnSymbol = symbol.replace("PSE-", "");
        } else {
            returnSymbol = symbol;
        }
        return returnSymbol;
    }
    function GetRateColor(Rate) {
        var GreenColor = "#0FB203";
        var RedColor = "#A80008";
        return Rate >= 0 ? GreenColor : RedColor;
    }
    function GetRate(StrategyGrowthDecayTime, Result) {
        var returnResult = 0;
        switch (StrategyGrowthDecayTime) {
            case "C0":
                returnResult = Result.GrowthDecayRate;
                break;
            case "W1":
                returnResult = Result.GrowthDecayRateW1;
                break;
            case "W2":
                returnResult = Result.GrowthDecayRateW2;
                break;
            case "W3":
                returnResult = Result.GrowthDecayRateW3;
                break;
            case "M1":
                returnResult = Result.GrowthDecayRateM1;
                break;
            case "M2":
                returnResult = Result.GrowthDecayRateM2;
                break;
            case "M3":
                returnResult = Result.GrowthDecayRateM3;
                break;
            default:
                returnResult = 0;
                break;
        }
        return Math.round(returnResult);
    }

    // User Interface
    function ExpandCollapseFilters() {
        $("#SymbolFilterDiv").hide();
        $("#StrategyFilterDiv").hide();
        $("#MACDFilterDiv").hide();
        $("#MagentaChannelFilterDiv").hide();
        $("#SeasonalityFilterDiv").hide();
        $("#AdditionalFilterDiv").hide();

        if (document.getElementById('SymbolFilter').checked) $("#SymbolFilterDiv").show();
        if (document.getElementById('StrategyFilter').checked) $("#StrategyFilterDiv").show();
        if (document.getElementById('MACDFilter').checked) $("#MACDFilterDiv").show();
        if (document.getElementById('MagentaChannelFilter').checked) $("#MagentaChannelFilterDiv").show();
        if (document.getElementById('SeasonalityFilter').checked) $("#SeasonalityFilterDiv").show();
        if (document.getElementById('AdditionalFilter').checked) $("#AdditionalFilterDiv").show();
    }

    // Page Load
    $(document).ready(function () {
        currentUser = '@User.Identity.Name';

        NavFirstPage = document.getElementById('NavFirstPage');
        NavPreviousPage = document.getElementById('NavPreviousPage');
        NavNextPage = document.getElementById('NavNextPage');
        NavLastPage = document.getElementById('NavLastPage');
        NavCurrentPage = document.getElementById('NavCurrentPage');

        UserAlertData = new wijmo.collections.ObservableArray();
        UserAlertCollection = new wijmo.collections.CollectionView();
        UserAlertCollection.collectionChanged.addHandler(function (sender, args) {
            UpdateNavPage();
        });
        UserAlertGrid = new wijmo.grid.FlexGrid('#UserAlertGrid');

        AddListenerNavPage();

        GetUserAlert();

        $('#SymbolFilter').on('change', function () { 
            ExpandCollapseFilters();
        })
        $('#StrategyFilter').on('change', function () {
            ExpandCollapseFilters();
        })
        $('#MACDFilter').on('change', function () {
            ExpandCollapseFilters();
        })
        $('#MagentaChannelFilter').on('change', function () {
            ExpandCollapseFilters();
        })
        $('#SeasonalityFilter').on('change', function () {
            ExpandCollapseFilters();
        })     
        $('#AdditionalFilter').on('change', function () {
            ExpandCollapseFilters();
        })
    });
</script>